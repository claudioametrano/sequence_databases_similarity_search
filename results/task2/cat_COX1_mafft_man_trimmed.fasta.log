IQ-TREE multicore version 2.4.0 for Linux x86 64-bit built Feb 12 2025
Developed by Bui Quang Minh, Nguyen Lam Tung, Olga Chernomor, Heiko Schmidt,
Dominik Schrempf, Michael Woodhams, Ly Trong Nhan, Thomas Wong

Host:    giano (AVX2, FMA3, 503 GB RAM)
Command: iqtree2 -s cat_COX1_mafft_man_trimmed.fasta -m MFP -B 1000 -alrt 1000 -nt 25 --redo
Seed:    791981 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Wed May  7 18:58:12 2025
Kernel:  AVX+FMA - 25 threads (56 CPU cores detected)

Reading alignment file cat_COX1_mafft_man_trimmed.fasta ... Fasta format detected
Reading fasta file: done in 0.000165899 secs using 14.47% CPU
Alignment most likely contains DNA/RNA sequences
Alignment has 10 sequences with 610 columns, 320 distinct patterns
248 parsimony-informative, 110 singleton sites, 252 constant sites
WARNING: Some sequence names are changed as follows:
PP815713.1_Anopheles_pretoriensis_isolate_MOLS13_cytochrome_c_oxidase_subunit_I_(COX1)_gene,_partial_cds;_mitochondrial -> PP815713.1_Anopheles_pretoriensis_isolate_MOLS13_cytochrome_c_oxidase_subunit_I__COX1__gene__partial_cds__mitochondrial
MF167645.1_Caenorhabditis_elegans_cytochrome_oxidase_subunit_I_(COI)_gene,_partial_cds;_mitochondrial -> MF167645.1_Caenorhabditis_elegans_cytochrome_oxidase_subunit_I__COI__gene__partial_cds__mitochondrial
MF170952.1_Danio_rerio_voucher_ZMUD:055/B_cytochrome_oxidase_subunit_I_(COI)_gene,_partial_cds;_mitochondrial -> MF170952.1_Danio_rerio_voucher_ZMUD_055/B_cytochrome_oxidase_subunit_I__COI__gene__partial_cds__mitochondrial
MG605130.1_Drosophila_melanogaster_voucher_dromel87_cytochrome_c_oxidase_subunit_1_gene,_partial_cds;_mitochondrial -> MG605130.1_Drosophila_melanogaster_voucher_dromel87_cytochrome_c_oxidase_subunit_1_gene__partial_cds__mitochondrial
NC_001224.1_Saccharomyces_cerevisiae_S288c_mitochondrion,_complete_genome -> NC_001224.1_Saccharomyces_cerevisiae_S288c_mitochondrion__complete_genome
MT445415.1_Gallus_gallus_isolate_VT1638_cytochrome_c_oxidase_subunit_I_(COX1)_gene,_partial_cds;_mitochondrial -> MT445415.1_Gallus_gallus_isolate_VT1638_cytochrome_c_oxidase_subunit_I__COX1__gene__partial_cds__mitochondrial
KC292251.1_Homo_sapiens_cytochrome_c_oxidase_subunit_I_(COX1)_gene,_COX1-C6128T_allele,_complete_cds;_mitochondrial -> KC292251.1_Homo_sapiens_cytochrome_c_oxidase_subunit_I__COX1__gene__COX1-C6128T_allele__complete_cds__mitochondrial
MN228578.1_Mus_musculus_musculus_voucher_24133_cytochrome_oxidase_subunit_I_(Cox1)_gene,_partial_cds;_mitochondrial -> MN228578.1_Mus_musculus_musculus_voucher_24133_cytochrome_oxidase_subunit_I__Cox1__gene__partial_cds__mitochondrial
AY972718.1_Pan_troglodytes_isolate_PR00837_cytochrome_c_oxidase_subunit_I_(COXI)_gene,_partial_cds;_mitochondrial -> AY972718.1_Pan_troglodytes_isolate_PR00837_cytochrome_c_oxidase_subunit_I__COXI__gene__partial_cds__mitochondrial
MH624134.1_Rattus_norvegicus_cytochrome_c_oxidase_subunit_1_gene,_partial_cds;_mitochondrial -> MH624134.1_Rattus_norvegicus_cytochrome_c_oxidase_subunit_1_gene__partial_cds__mitochondrial

                                                                                                                         Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 6.904e-05 secs using 3.017e+04% CPU
   1  PP815713.1_Anopheles_pretoriensis_isolate_MOLS13_cytochrome_c_oxidase_subunit_I__COX1__gene__partial_cds__mitochondrial    0.00%    failed      1.40%
   2  MF167645.1_Caenorhabditis_elegans_cytochrome_oxidase_subunit_I__COI__gene__partial_cds__mitochondrial                     17.38%    failed      0.00%
   3  MF170952.1_Danio_rerio_voucher_ZMUD_055/B_cytochrome_oxidase_subunit_I__COI__gene__partial_cds__mitochondrial              1.64%    passed     80.02%
   4  MG605130.1_Drosophila_melanogaster_voucher_dromel87_cytochrome_c_oxidase_subunit_1_gene__partial_cds__mitochondrial        3.77%    failed      0.00%
   5  NC_001224.1_Saccharomyces_cerevisiae_S288c_mitochondrion__complete_genome                                                  0.00%    failed      0.00%
   6  MT445415.1_Gallus_gallus_isolate_VT1638_cytochrome_c_oxidase_subunit_I__COX1__gene__partial_cds__mitochondrial             0.00%    failed      0.00%
   7  KC292251.1_Homo_sapiens_cytochrome_c_oxidase_subunit_I__COX1__gene__COX1-C6128T_allele__complete_cds__mitochondrial        0.00%    failed      0.00%
   8  MN228578.1_Mus_musculus_musculus_voucher_24133_cytochrome_oxidase_subunit_I__Cox1__gene__partial_cds__mitochondrial        0.00%    passed     14.20%
   9  AY972718.1_Pan_troglodytes_isolate_PR00837_cytochrome_c_oxidase_subunit_I__COXI__gene__partial_cds__mitochondrial          2.95%    failed      0.01%
  10  MH624134.1_Rattus_norvegicus_cytochrome_c_oxidase_subunit_1_gene__partial_cds__mitochondrial                               1.15%    passed     42.61%
****  TOTAL                                                                                                                      2.69%  7 sequences failed composition chi2 test (p-value<5%; df=3)

Creating fast initial parsimony tree by random order stepwise addition...
0.000 seconds, parsimony score: 852 (based on 358 sites)
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using GTR+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -4086.843
Optimal log-likelihood: -4086.344
Rate parameters:  A-C: 4.26412  A-G: 6.40381  A-T: 7.34977  C-G: 3.18639  C-T: 14.70243  G-T: 1.00000
Base frequencies:  A: 0.278  C: 0.237  G: 0.164  T: 0.322
Proportion of invariable sites: 0.199
Gamma shape alpha: 0.754
Parameters optimization took 1 rounds (0.010 sec)
Time for fast ML tree search: 0.119 seconds

NOTE: ModelFinder requires 2 MB RAM!
ModelFinder will test up to 484 DNA models (sample size: 610 epsilon: 0.100) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  GTR+F         4269.628     25  8589.256     8591.482     8699.592
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  GTR+F+I       4114.477     26  8280.955     8283.363     8395.705
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  GTR+F+G4      4087.196     26  8226.393     8228.801     8341.143
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  GTR+F+I+G4    4086.208     27  8226.416     8229.014     8345.580
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  GTR+F+R2      4094.288     27  8242.575     8245.173     8361.738
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  GTR+F+R3      4084.205     29  8226.410     8229.410     8354.401
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  GTR+F+R4      4084.250     31  8230.499     8233.932     8367.317
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  GTR+F+I+R2    4085.348     28  8226.697     8229.492     8350.274
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  GTR+F+I+R3    4084.986     30  8229.972     8233.185     8362.376
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 25  SYM+G4        4125.764     23  8297.527     8299.411     8399.037
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 26  SYM+I+G4      4121.051     24  8290.101     8292.152     8396.024
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 36  SYM+I+R2      4120.726     25  8291.453     8293.679     8401.789
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  TVM+F+G4      4098.484     25  8246.968     8249.194     8357.305
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  TVM+F+I+G4    4098.596     26  8249.192     8251.601     8363.942
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  TVM+F+I+R2    4096.217     27  8246.434     8249.032     8365.598
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  TVMe+G4       4159.991     22  8363.983     8365.707     8461.079
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  TVMe+I+G4     4155.499     23  8356.997     8358.881     8458.507
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  TVMe+I+R2     4155.411     24  8358.821     8360.873     8464.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 91  TIM3+F+G4     4105.561     24  8259.123     8261.174     8365.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  TIM3+F+I+G4   4106.348     25  8262.695     8264.921     8373.032
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
102  TIM3+F+I+R2   4100.238     26  8252.476     8254.884     8367.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  TIM3e+G4      4184.183     21  8410.366     8411.937     8503.048
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  TIM3e+I+G4    4181.448     22  8406.895     8408.619     8503.991
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  TIM3e+I+R2    4179.501     23  8405.002     8406.886     8506.511
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  TIM2+F+G4     4092.515     24  8233.029     8235.081     8338.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  TIM2+F+I+G4   4091.894     25  8233.789     8236.015     8344.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  TIM2+F+I+R2   4090.233     26  8232.466     8234.874     8347.216
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  TIM2e+G4      4140.057     21  8322.114     8323.685     8414.796
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  TIM2e+I+G4    4137.342     22  8318.683     8320.407     8415.780
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
168  TIM2e+I+R2    4136.687     23  8319.374     8321.258     8420.884
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
179  TIM+F+G4      4100.756     24  8249.512     8251.564     8355.435
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
180  TIM+F+I+G4    4100.994     25  8251.988     8254.214     8362.325
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  TIM+F+I+R2    4095.803     26  8243.605     8246.014     8358.355
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  TIMe+G4       4175.304     21  8392.608     8394.179     8485.290
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  TIMe+I+G4     4173.243     22  8390.485     8392.209     8487.582
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  TIMe+I+R2     4173.387     23  8392.773     8394.657     8494.283
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  TPM3u+F+G4    4112.374     23  8270.748     8272.632     8372.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  TPM3u+F+I+G4  4113.505     24  8275.010     8277.061     8380.933
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
234  TPM3u+F+I+R2  4107.448     25  8264.896     8267.122     8375.233
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
245  TPM3+G4       4222.145     20  8484.291     8485.717     8572.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
246  TPM3+I+G4     4220.521     21  8483.042     8484.614     8575.725
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
256  TPM3+I+R2     4215.483     22  8474.965     8476.689     8572.062
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  TPM2u+F+G4    4103.553     23  8253.107     8254.991     8354.617
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  TPM2u+F+I+G4  4103.536     24  8255.073     8257.124     8360.996
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  TPM2u+F+I+R2  4101.016     25  8252.031     8254.257     8362.367
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  TPM2+G4       4176.941     20  8393.882     8395.308     8482.151
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  TPM2+I+G4     4174.992     21  8391.985     8393.556     8484.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  TPM2+I+R2     4173.898     22  8391.795     8393.519     8488.891
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
311  K3Pu+F+G4     4108.338     23  8262.676     8264.560     8364.185
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
312  K3Pu+F+I+G4   4109.085     24  8266.170     8268.221     8372.093
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
322  K3Pu+F+I+R2   4103.462     25  8256.924     8259.150     8367.261
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  K3P+G4        4214.899     20  8469.797     8471.223     8558.066
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  K3P+I+G4      4213.439     21  8468.879     8470.450     8561.562
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  K3P+I+R2      4210.924     22  8465.849     8467.573     8562.945
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  TN+F+G4       4105.587     23  8257.174     8259.058     8358.684
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  TN+F+I+G4     4105.929     24  8259.857     8261.909     8365.780
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  TN+F+I+R2     4101.235     25  8252.469     8254.695     8362.806
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
377  TNe+G4        4188.708     20  8417.416     8418.842     8505.685
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  TNe+I+G4      4187.304     21  8416.608     8418.180     8509.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
388  TNe+I+R2      4186.505     22  8417.011     8418.735     8514.107
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  HKY+F+G4      4112.725     22  8269.449     8271.173     8366.545
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
400  HKY+F+I+G4    4113.651     23  8273.303     8275.187     8374.812
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  HKY+F+I+R2    4108.410     24  8264.820     8266.871     8370.743
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  K2P+G4        4228.163     19  8494.326     8495.614     8578.181
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  K2P+I+G4      4227.434     20  8494.868     8496.294     8583.137
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  K2P+I+R2      4222.581     21  8487.162     8488.734     8579.845
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  F81+F+G4      4161.657     21  8365.314     8366.886     8457.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  F81+F+I+G4    4162.198     22  8368.396     8370.120     8465.492
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
454  F81+F+I+R2    4159.001     23  8364.001     8365.885     8465.511
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  JC+G4         4263.650     18  8563.300     8564.458     8642.743
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
466  JC+I+G4       4262.808     19  8563.616     8564.904     8647.472
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  JC+I+R2       4262.176     20  8564.351     8565.778     8652.621
Akaike Information Criterion:           GTR+F+G4
Corrected Akaike Information Criterion: GTR+F+G4
Bayesian Information Criterion:         TIM2+F+G4
Best-fit model: TIM2+F+G4 chosen according to BIC

All model information printed to cat_COX1_mafft_man_trimmed.fasta.model.gz
CPU time for ModelFinder: 84.947 seconds (0h:1m:24s)
Wall-clock time for ModelFinder: 3.422 seconds (0h:0m:3s)
Generating 1000 samples for ultrafast bootstrap (seed: 791981)...

NOTE: 1 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -4166.686
2. Current log-likelihood: -4097.208
3. Current log-likelihood: -4093.596
4. Current log-likelihood: -4092.831
5. Current log-likelihood: -4092.604
Optimal log-likelihood: -4092.505
Rate parameters:  A-C: 2.81486  A-G: 3.21937  A-T: 2.81486  C-G: 1.00000  C-T: 7.43830  G-T: 1.00000
Base frequencies:  A: 0.278  C: 0.237  G: 0.164  T: 0.322
Gamma shape alpha: 0.394
Parameters optimization took 5 rounds (0.053 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.00025364 secs using 969.5% CPU
Computing ML distances took 0.000352 sec (of wall-clock time) 0.002566 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 0.00455258 secs using 898.4% CPU
Computing RapidNJ tree took 0.040353 sec (of wall-clock time) 0.322875 sec (of CPU time)
Log-likelihood of RapidNJ tree: -4096.379
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 0.023 second
Computing log-likelihood of 85 initial trees ... 0.246 seconds
Current best score: -4092.505

Do NNI search on 20 best initial trees
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -4092.473
Iteration 10 / LogL: -4092.513 / Time: 0h:0m:4s
Iteration 20 / LogL: -4092.808 / Time: 0h:0m:4s
Finish initializing candidate tree set (2)
Current best tree score: -4092.473 / CPU time: 1.015
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Estimate model parameters (epsilon = 0.100)
UPDATE BEST LOG-LIKELIHOOD: -4092.078
UPDATE BEST LOG-LIKELIHOOD: -4092.076
Iteration 30 / LogL: -4092.090 / Time: 0h:0m:5s (0h:0m:3s left)
Iteration 40 / LogL: -4092.573 / Time: 0h:0m:5s (0h:0m:3s left)
Iteration 50 / LogL: -4092.465 / Time: 0h:0m:6s (0h:0m:2s left)
Log-likelihood cutoff on original alignment: -4114.537
UPDATE BEST LOG-LIKELIHOOD: -4092.076
UPDATE BEST LOG-LIKELIHOOD: -4092.076
Iteration 60 / LogL: -4092.655 / Time: 0h:0m:6s (0h:0m:2s left)
UPDATE BEST LOG-LIKELIHOOD: -4092.076
Iteration 70 / LogL: -4092.710 / Time: 0h:0m:7s (0h:0m:1s left)
Iteration 80 / LogL: -4092.633 / Time: 0h:0m:7s (0h:0m:1s left)
Iteration 90 / LogL: -4092.561 / Time: 0h:0m:8s (0h:0m:0s left)
Iteration 100 / LogL: -4092.234 / Time: 0h:0m:8s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -4113.863
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.999
TREE SEARCH COMPLETED AFTER 102 ITERATIONS / Time: 0h:0m:8s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -4092.076
Optimal log-likelihood: -4092.074
Rate parameters:  A-C: 2.81998  A-G: 3.39292  A-T: 2.81998  C-G: 1.00000  C-T: 7.39805  G-T: 1.00000
Base frequencies:  A: 0.278  C: 0.237  G: 0.164  T: 0.322
Gamma shape alpha: 0.385
Parameters optimization took 1 rounds (0.005 sec)
BEST SCORE FOUND : -4092.074

Testing tree branches by SH-like aLRT with 1000 replicates...
0.022 sec.
Creating bootstrap support values...
Split supports printed to NEXUS file cat_COX1_mafft_man_trimmed.fasta.splits.nex
Total tree length: 3.880

Total number of iterations: 102
CPU time used for tree search: 126.738 sec (0h:2m:6s)
Wall-clock time used for tree search: 5.255 sec (0h:0m:5s)
Total CPU time used: 214.438 sec (0h:3m:34s)
Total wall-clock time used: 8.855 sec (0h:0m:8s)

Computing bootstrap consensus tree...
Reading input file cat_COX1_mafft_man_trimmed.fasta.splits.nex...
10 taxa and 45 splits.
Consensus tree written to cat_COX1_mafft_man_trimmed.fasta.contree
Reading input trees file cat_COX1_mafft_man_trimmed.fasta.contree
Log-likelihood of consensus tree: -4092.528

Analysis results written to: 
  IQ-TREE report:                cat_COX1_mafft_man_trimmed.fasta.iqtree
  Maximum-likelihood tree:       cat_COX1_mafft_man_trimmed.fasta.treefile
  Likelihood distances:          cat_COX1_mafft_man_trimmed.fasta.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          cat_COX1_mafft_man_trimmed.fasta.splits.nex
  Consensus tree:                cat_COX1_mafft_man_trimmed.fasta.contree
  Screen log file:               cat_COX1_mafft_man_trimmed.fasta.log

Date and Time: Wed May  7 18:58:21 2025
